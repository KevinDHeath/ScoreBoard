@using Grass.Play.Components.Pages

<div class="modal is-active">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head is-background-info-dark">
      <p class="modal-card-title">Card in-hand action</p>
      <button class="delete is-large" @onclick="OnCancel" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <EditForm Model="Options" OnValidSubmit="OnPlay" FormName="PlayCard">
        <DataAnnotationsValidator />
        <table class="table" width="100%">
          <tr>
            <td class="game-card"><img class="image" title="@Options.Card?.Comment" src="./img/cards/@Options.Card?.Image"></td>
            <td>
              @if( SelectOptions.Count == 0 ) { @Message }
              else
              {
                <div>
                  <InputSelect class="select-player" @bind-Value="Options.OtherId">
                    <option value="0">
                      Select an option...
                    </option>
                    @foreach( Player key in SelectOptions.Keys )
                    {
                      int amt = SelectOptions[key];
                      <option checked="@(Options.OtherId == @key.Id)" value="@key.Id">
                        @key.Name: @Home.FormatAmt( amt )
                      </option>
                    }
                  </InputSelect>
                  <ValidationSummary />
                </div>
              }
            </td>
          </tr>
          <tr>
            <td colspan="2">
              @if( CanPlay )
              {
                <button class="button is-success is-pulled-left" type="submit" style="min-width: 100px;" @onclick="OnPlay">Play</button>
              }
              @if( CanPass )
              {
                <button class="button is-success is-pulled-left" type="button" style="min-width: 100px;" @onclick="OnPass">Pass</button>
              }
              @if( CanDiscard )
              {
                <button class="button is-warning is-pulled-right" type="button" style="min-width: 100px;" @onclick="OnDiscard">Discard</button>
              }
            </td>
          </tr>
        </table>
      </EditForm>
    </section>
  </div>
</div>

@code {
  [Parameter, EditorRequired]
  public required PlayOptions Options { get; set; }
  [Parameter, EditorRequired]
  public required GameService Service { get; set; }
  [Parameter, EditorRequired]
  public EventCallback OnCancel { get; set; }
  [Parameter, EditorRequired]
  public EventCallback OnPlay { get; set; }
  [Parameter, EditorRequired]
  public EventCallback OnPass { get; set; }
  [Parameter, EditorRequired]
  public EventCallback OnDiscard { get; set; }

  private bool CanDiscard { get; set; } = true;
  private bool CanPlay { get; set; } = false;
  private bool CanPass { get; set; } = false;
  private string Message { get; set; } = string.Empty;
  private Dictionary<Player, int> SelectOptions { get; set; } = [];

  protected override void OnInitialized()
  {
    if( SelectOptions.Count > 0 ) { SelectOptions.Clear(); }
    if( Options.Player is null || Options.Card is null ) { return; }

    if( Options.Player.Play )
    {
      SelectOptions = Service.CheckPlay( Options );
      CanPlay = Options.CanPlay == PlayResult.Success;
      if( !CanPlay ) { Message = Options.CanPlay.ToString(); }
      else { CanDiscard = Options.CanDiscard; }
    }
    else if( Options.Player.Pass )
    {
      CanPass = true;
      CanDiscard = false;
    }
    else 
    {
      CanDiscard = false;
      Message = "It's not your turn.";
    }
  }
}